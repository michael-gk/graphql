"A datetime string with format `Y-m-d H:i:s`, e.g. `2018-05-23 13:43:32`."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"Indicates what fields are available at the top level of a query operation."
type Query {
    users: [User!]! @paginate(defaultCount:10)
    user(id: ID @eq): User @find
    posts: [Post!]! @paginate(defaultCount:10) @orderBy(column: "created_at", direction: DESC)
    postsResolver: [Post!]! @field(resolver: "App\\GraphQL\\Queries\\PostsResolver")
    post(id: ID @eq): Post @find
    postResolver(id: ID!): Post @field(resolver: "App\\GraphQL\\Queries\\PostsResolver")
}

type Mutation {
    createPost(
        user_id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ) : Post @create
    createPostResolver(
        user_id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ) : Post @field(resolver: "App\\GraphQL\\Mutations\\CreatePostResolver")
    updatePost(
        id: ID!
        title: String! @rules(apply: ["required", "min:3"])
        body: String! @rules(apply: ["required", "min:3"])
    ) : Post @update
    deletePost(
        id: ID!
    ) : Post @delete


}

"Account of a person who utilizes this application."
type User {
    "Unique primary key."
    id: ID!

    "Non-unique name."
    name: String!

    "Unique email address."
    email: String!

    posts: [Post!]! @hasMany

    "When the email was verified."
    email_verified_at: DateTime

    "When the account was created."
    created_at: DateTime!

    "When the account was last updated."
    updated_at: DateTime!
}

type Post {
    id: ID!
    title: String!
    body: String!
    user: User! @belongsTo
    created_at: DateTime!
    updated_at:DateTime!

}
